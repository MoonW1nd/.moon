snippet /* "documentation block"
/**
 * $1
 */
endsnippet

snippet todo "do this later"
/**
 * TODO [MoonW1nd]: $1
 */
endsnippet

snippet cld "console.log with desc"
console.log('$1', ${1:logme});
endsnippet

snippet cl "console.log"
console.log('$1', ${1:logme});
endsnippet

snippet iif "ignore the whole file"
/* istanbul ignore file */
endsnippet

snippet iin "ignore the next thing"
/* istanbul ignore next */
endsnippet

snippet iife "ignore the whole file (experiment desc)"
/* istanbul ignore file: напишем тест, если решим раскатить эксперимент */
endsnippet

snippet iine "ignore the next thing (experiment desc)"
/* istanbul ignore next: напишем тест, если решим раскатить эксперимент */
endsnippet

snippet ednl "eslint-disable-next-line comment"
// eslint-disable-next-line ${0:rule-name}
endsnippet

snippet ed "export default"
export default ${0:exported-entity};
endsnippet

snippet ir "import React"
import React from 'react';
endsnippet

snippet is "import styles"
import styles from './styles.module.css';
endsnippet

# Expand console.log
snippet "([^\s]\w+)\.log" "console.log(postfix)" r
console.log(`!p snip.rv = match.group(1)`)$0
endsnippet

snippet rget "create ramda geter"
const get`!p snip.rv=t[1].capitalize()` = prop('$1');
endsnippet

snippet afn "create function"
const ${1:name} = (${2:args}) => {
	${VISUAL}$0
}
endsnippet

snippet if "if statement"
if (${1: condition}) {
	${VISUAL}$0
}
endsnippet
